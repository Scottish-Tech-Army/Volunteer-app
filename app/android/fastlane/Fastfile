# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Play Store"
  lane :beta do
    store_password = prompt(text: "Signing Store Password: ", secure_text: true)
    key_password = prompt(text: "Alias Key Password: ", secure_text: true)
    releaseFilePath = File.join(Dir.pwd, "..", "my-release-key.keystore")
    gradle(task: 'clean')
    gradle(
      task: 'bundle',
      build_type: 'Release',
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => store_password,
        "android.injected.signing.key.alias" => "my-key-alias",
        "android.injected.signing.key.password" => key_password,
      }
    )
    upload_to_play_store(
      track: 'internal'
    )
  end

  desc "Update version code and changelogs before making an internal release"
  lane :pre_beta do
    new_version_code = google_play_track_version_codes(track:"internal").last.to_i + 1
    android_set_version_code(version_code: new_version_code)
    make_changelog
  end
  
  desc "Create changelog txt file for the current versionCode and update CHANGELOG.md"
  lane :make_changelog do
    version_code = android_get_version_code

    # Get the version name from the app package.json
    # The android_get_version_name action from the versioning_android plugin doesn't work,
    # probably since our build.gradle is reading the version name from package.json at build time
    package_json_file = File.open(File.join(Dir.pwd, "..", "..", "package.json"), "r")
    package_json_contents = JSON.parse(package_json_file.read)
    version_name = package_json_contents["version"]
    package_json_file.close

    # Make a txt file in the metadata/android/en-GB directory,
    # containing the changes for this version only (from the Unreleased section of CHANGELOG.md)
    metadata_dir = File.join(Dir.pwd, "metadata", "android", "en-GB", "changelogs")
    log_file = File.open("#{metadata_dir}/#{version_code}.txt", "w")
    changes = read_changelog
    log_file.puts(changes)
    log_file.close

    # update CHANGELOG.md: move everything that was under Unreleased into a new section for this build
    stamp_changelog(section_identifier: "#{version_name} (version code #{version_code})")
  end
end
